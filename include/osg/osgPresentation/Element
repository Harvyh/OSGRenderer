/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2013 Robert Osfield
 *
 * This library is open source and may be redistributed and/or modified under
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * OpenSceneGraph Public License for more details.
*/

#ifndef OSGPRESENTATION_ELEMENT
#define OSGPRESENTATION_ELEMENT 1

#include <osgPresentation/Group>
#include <osgUtil/UpdateVisitor>
#include <osgGA/EventVisitor>

namespace osgPresentation {

/** osgPresentation::Element
*/
class OSGPRESENTATION_EXPORT Element : public osgPresentation::Group
{
    public :

        Element() {}

        /** Copy constructor using CopyOp to manage deep vs shallow copy. */
        Element(const Element& element,const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) : osgPresentation::Group(element,copyop) {}

        META_Presentation(Element);

        /** Load the subgraph implementation of the element.*/
        virtual bool load() { return false; }

        /** Remove the the subgraph implementation, freeing up space.*/
        virtual bool unload() { removeChildren(0, getNumChildren()); return true; }

        /** Return true if the subgraph implementation has been loaded.*/
        virtual bool loaded() const { return getNumChildren()!=0; }


        /** Enter the element for the first time, starting any animations, movies, audio etc..*/
        virtual void enter() {}

        /** Leave the element, stopping any animations, movies, audio etc..*/
        virtual void leave() {}


        /** Pause any animatios, videos, audio etc.*/
        virtual void pause() {}

        /** Play any animatios, videos, audio etc.*/
        virtual void play() {}

        /** Reset any animations, vidoes, audio etc. back to the begininng.*/
        virtual void reset() {}

protected :

        virtual ~Element() {}
};

}

#endif
